{"version":3,"sources":["components/SearchFilter/SearchFilter.module.css","components/ContactForm/ContactForm.module.css","redux/contactSlice/contactsSlice.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/SearchFilter/SearchFilter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","services/localStorage.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","items","filter","reducers","setContacts","state","payload","addContacts","deleteContacts","contact","id","updateFilter","actions","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ContactForm","onSubmit","useState","setName","number","setNumber","handleChange","event","target","value","className","s","contactform","preventDefault","contactLabel","type","pattern","title","required","onChange","contactInput1","htmlFor","contactInput","contactBtn","Filter","filterSearch","input","ContactList","onClick","handleDeleteBtn","list","map","item","text","btn","App","useSelector","dispatch","useDispatch","useEffect","key","JSON","parse","localStorage","getItem","error","storage","length","setItem","stringify","contactName","nanoid","normalizedName","toLowerCase","find","alert","currentTarget","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97b01bd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"SearchFilter_filter__95-RZ\",\"input\":\"SearchFilter_input__2bvZy\",\"filterSearch\":\"SearchFilter_filterSearch__2UjRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBtn\":\"ContactForm_contactBtn__swGh8\",\"contactform\":\"ContactForm_contactform__2ufq5\",\"contactLabel\":\"ContactForm_contactLabel__3pMQh\",\"contactInput1\":\"ContactForm_contactInput1__2OqzJ\",\"contactInput\":\"ContactForm_contactInput__1ax5S\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  filter: \"\",\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  reducers: {\n    setContacts: (state, { payload }) => ({ ...state, items: payload }),\n    addContacts: (state, { payload }) => ({\n      ...state,\n      items: [...state.items, payload],\n    }),\n    deleteContacts: (state, { payload }) => ({\n      ...state,\n      items: state.items.filter((contact) => contact.id !== payload),\n    }),\n    updateFilter: (state, { payload }) => ({ ...state, filter: payload }),\n  },\n});\nexport const { setContacts, addContacts, deleteContacts, updateFilter } =\n  contactsSlice.actions;\nexport default contactsSlice.reducer;\n// export default contactsSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contactSlice/contactsSlice\";\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\nexport default store;\n","import { useState } from \"react\";\n// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div className={s.contactform}>\n      <form onSubmit={handleSubmit}>\n        <label className={s.contactLabel}>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            className={s.contactInput1}\n          />\n        </label>\n        <label htmlFor=\"\" className={s.contactLabel}>\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            className={s.contactInput}\n          />\n        </label>\n        <button type=\"submit\" className={s.contactBtn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./SearchFilter.module.css\";\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={s.filterSearch}>\n    <label className={s.filter}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onClick }) => {\n  const handleDeleteBtn = (event) => {\n    const { name } = event.target;\n    onClick(name);\n  };\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}> {name} :</p>\n          <p className={s.text}> {number} </p>\n\n          <button\n            type=\"button\"\n            name={id}\n            onClick={handleDeleteBtn}\n            className={s.btn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default ContactList;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"../ContactForm/ContactForm.jsx\";\nimport Filter from \"../SearchFilter/SearchFilter.jsx\";\nimport ContactList from \"../ContactList/ContactList.jsx\";\nimport * as storage from \"../../services/localStorage\";\nimport * as actions from \"../../redux/contactSlice/contactsSlice\";\n\nconst App = () => {\n  // const [filter, setFilter] = useState(\"\");\n  // const [contacts, setContacts] = useState([]);\n\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const contacts = storage.get(\"contacts\");\n    if (contacts && contacts.length > 0) {\n      dispatch(actions.setContacts(contacts));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    storage.save(\"contacts\", contacts);\n  }, [contacts]);\n\n  const addNewContact = (name, number) => {\n    const contactName = { name, number, id: nanoid() };\n    const normalizedName = name.toLowerCase();\n    const duplicateName = contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (duplicateName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (name === \"\") {\n      alert(\"Please type your info in the field. It is empty.\");\n    } else {\n      dispatch(actions.addContacts(contactName));\n    }\n  };\n\n  // const deleteContact = (id) => {\n  //   dispatch(contacts.filter((contact) => contact.id !== id));\n  // };\n  const deleteContact = (id) => {\n    dispatch(actions.deleteContacts(id));\n  };\n\n  const filterContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const updateFilter = (event) => {\n    dispatch(actions.updateFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={updateFilter} />\n        <ContactList contacts={filterContacts()} onClick={deleteContact} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// ф-ция сохранения в локал стор\nconst save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\n// ф-ция получения в локал стор (считывает данные и парсит их)\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n// ф-ция удаления с локал стор\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__LKODl\",\"item\":\"ContactList_item__3FVru\",\"text\":\"ContactList_text__1YeHW\",\"btn\":\"ContactList_btn__3cnVM\"};"],"sourceRoot":""}